<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="account_record">
  <resultMap class="com.people2000.user.model.po.ibatis.AccountRecordPO" id="abatorgenerated_AccountRecordPOResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="opt_type" jdbcType="INTEGER" property="optType" />
    <result column="opt_amount" jdbcType="DECIMAL" property="optAmount" />
    <result column="rest_amount" jdbcType="DECIMAL" property="restAmount" />
    <result column="opt_commont" jdbcType="VARCHAR" property="optCommont" />
    <result column="is_available" jdbcType="INTEGER" property="isAvailable" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="abatorgenerated_Example_Where_Clause">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="abatorgenerated_selectByPrimaryKey" parameterClass="com.people2000.user.model.po.ibatis.AccountRecordPO" resultMap="abatorgenerated_AccountRecordPOResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    select id, account_id, opt_type, opt_amount, rest_amount, opt_commont, is_available, is_deleted,
      create_user, create_time, update_user, update_time
    from account_record
    where id = #id:BIGINT#
  </select>
  <select id="abatorgenerated_selectByExample" parameterClass="com.people2000.user.model.po.ibatis.AccountRecordPOExample" resultMap="abatorgenerated_AccountRecordPOResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    select id, account_id, opt_type, opt_amount, rest_amount, opt_commont, is_available, is_deleted,
      create_user, create_time, update_user, update_time
    from account_record
    <isParameterPresent>
      <include refid="account_record.abatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
      <isNotNull property="limitClauseStart">
        limit #limitClauseStart:BIGINT#, #limitClauseCount:BIGINT#
      </isNotNull>
    </isParameterPresent>
  </select>
  <insert id="abatorgenerated_insert" parameterClass="com.people2000.user.model.po.ibatis.AccountRecordPO">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    insert into account_record (account_id, opt_type, opt_amount, rest_amount, opt_commont,
      is_available, is_deleted, create_user, create_time, update_user, update_time)
    values (#accountId:BIGINT#, #optType:INTEGER#, #optAmount:DECIMAL#, #restAmount:DECIMAL#,
      #optCommont:VARCHAR#, #isAvailable:INTEGER#, #isDeleted:INTEGER#, #createUser:BIGINT#,
      #createTime:TIMESTAMP#, #updateUser:BIGINT#, #updateTime:TIMESTAMP#)
    <selectKey keyProperty="id" resultClass="java.lang.Long">
      select last_insert_id() as value
    </selectKey>
  </insert>
  <update id="abatorgenerated_updateByPrimaryKeySelective" parameterClass="com.people2000.user.model.po.ibatis.AccountRecordPO">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    update account_record
    <dynamic prepend="set">
      <isNotNull prepend="," property="accountId">
        account_id = #accountId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="optType">
        opt_type = #optType:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="optAmount">
        opt_amount = #optAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="restAmount">
        rest_amount = #restAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="optCommont">
        opt_commont = #optCommont:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="isAvailable">
        is_available = #isAvailable:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isDeleted">
        is_deleted = #isDeleted:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createUser">
        create_user = #createUser:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="createTime">
        create_time = #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="updateUser">
        update_user = #updateUser:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="updateTime">
        update_time = #updateTime:TIMESTAMP#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <select id="abatorgenerated_countByExample" parameterClass="com.people2000.user.model.po.ibatis.AccountRecordPOExample" resultClass="java.lang.Integer">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    select count(*) from account_record
    <include refid="account_record.abatorgenerated_Example_Where_Clause" />
  </select>
  <update id="abatorgenerated_updateByExampleSelective">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    update account_record
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.accountId">
        account_id = #record.accountId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.optType">
        opt_type = #record.optType:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.optAmount">
        opt_amount = #record.optAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.restAmount">
        rest_amount = #record.restAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.optCommont">
        opt_commont = #record.optCommont:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.isAvailable">
        is_available = #record.isAvailable:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.isDeleted">
        is_deleted = #record.isDeleted:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.createUser">
        create_user = #record.createUser:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime">
        create_time = #record.createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.updateUser">
        update_user = #record.updateUser:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.updateTime">
        update_time = #record.updateTime:TIMESTAMP#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="account_record.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <select id="abatorgenerated_selectOneByExample" parameterClass="com.people2000.user.model.po.ibatis.AccountRecordPOExample" resultMap="abatorgenerated_AccountRecordPOResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu Aug 17 12:53:28 CST 2017.
    -->
    select id, account_id, opt_type, opt_amount, rest_amount, opt_commont, is_available, is_deleted,
      create_user, create_time, update_user, update_time
    from account_record
    <isParameterPresent>
      <include refid="account_record.abatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="abatorgenerated_batch_insert_id_fix" parameterClass="java.util.HashMap" resultClass="java.lang.Long">
    select last_insert_id() as value
  </select>
</sqlMap>