<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.people2000.user.business.dao.UserLoginLogMapper">
  <resultMap id="BaseResultMap" type="com.people2000.user.model.po.UserLoginLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="user_ip" jdbcType="VARCHAR" property="userIp" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="operating_system" jdbcType="VARCHAR" property="operatingSystem" />
    <result column="browser" jdbcType="VARCHAR" property="browser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, login_time, user_ip, user_id, operating_system, browser, create_time, create_by, 
    update_time, update_by, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_login_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_login_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.people2000.user.model.po.UserLoginLog">
    insert into user_login_log (id, login_time, user_ip, 
      user_id, operating_system, browser, 
      create_time, create_by, update_time, 
      update_by, is_delete)
    values (#{id,jdbcType=BIGINT}, #{loginTime,jdbcType=TIMESTAMP}, #{userIp,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{operatingSystem,jdbcType=VARCHAR}, #{browser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.people2000.user.model.po.UserLoginLog">
    insert into user_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="userIp != null">
        user_ip,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="operatingSystem != null">
        operating_system,
      </if>
      <if test="browser != null">
        browser,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIp != null">
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="operatingSystem != null">
        #{operatingSystem,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        #{browser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.people2000.user.model.po.UserLoginLog">
    update user_login_log
    <set>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIp != null">
        user_ip = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="operatingSystem != null">
        operating_system = #{operatingSystem,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        browser = #{browser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.people2000.user.model.po.UserLoginLog">
    update user_login_log
    set login_time = #{loginTime,jdbcType=TIMESTAMP},
      user_ip = #{userIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      operating_system = #{operatingSystem,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>