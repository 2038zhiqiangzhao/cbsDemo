package com.people2000.user.business.write.dao;

import java.sql.SQLException;
import java.util.List;

import com.people2000.user.model.po.ibatis.Role;
import com.people2000.user.model.po.ibatis.RoleExample;

public interface RoleDAOWrite {
	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_role
	 *
	 * @abatorgenerated Mon Nov 16 15:23:06 CST 2015
	 */
	Long insert(Role record) throws SQLException;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_role
	 *
	 * @abatorgenerated Mon Nov 16 15:23:06 CST 2015
	 */
	int updateByPrimaryKeySelective(Role record) throws SQLException;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_role
	 *
	 * @abatorgenerated Mon Nov 16 15:23:06 CST 2015
	 */
	List selectByExample(RoleExample example, boolean fromCache)
			throws SQLException;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_role
	 *
	 * @abatorgenerated Mon Nov 16 15:23:06 CST 2015
	 */
	Role selectByPrimaryKey(Long id, boolean fromCache) throws SQLException;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_role
	 *
	 * @abatorgenerated Mon Nov 16 15:23:06 CST 2015
	 */
	int countByExample(RoleExample example, boolean fromCache)
			throws SQLException;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_role
	 *
	 * @abatorgenerated Mon Nov 16 15:23:06 CST 2015
	 */
	int updateByExampleSelective(Role record, RoleExample example)
			throws SQLException;

	// 查询code是否存在(新增)
	List queryCodeForAdd(String string) throws SQLException;

	// 查询code是否存在(修改)
	List queryCodeForUpdate(String code, Long id) throws SQLException;

	// 查询角色名是否存在(新增)
	List queryNameForAdd(String name) throws SQLException;
}