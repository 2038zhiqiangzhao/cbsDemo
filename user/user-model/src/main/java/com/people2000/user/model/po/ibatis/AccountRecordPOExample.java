package com.people2000.user.model.po.ibatis;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public class AccountRecordPOExample {
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	protected Long limitClauseStart;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	protected Long limitClauseCount;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public AccountRecordPOExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	protected AccountRecordPOExample(AccountRecordPOExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClauseStart = example.limitClauseStart;
		this.limitClauseCount = example.limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public void setLimitClauseStart(Long limitClauseStart) {
		this.limitClauseStart = limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public Long getLimitClauseStart() {
		return limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public void setLimitClauseCount(Long limitClauseCount) {
		this.limitClauseCount = limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public Long getLimitClauseCount() {
		return limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public String allValue2String() {
		StringBuffer allValue = new StringBuffer();
		for (Object o : oredCriteria) {
			Criteria cr = (Criteria) o;
			if (cr.criteriaWithoutValue.size() > 0) {
				for (Object o2 : cr.criteriaWithoutValue) {
					allValue.append(o2);
				}
			}
			if (cr.criteriaWithSingleValue.size() > 0) {
				for (Object o2 : cr.criteriaWithSingleValue) {
					allValue.append(o2);
				}
			}
			if (cr.criteriaWithBetweenValue.size() > 0) {
				for (Object o2 : cr.criteriaWithBetweenValue) {
					Map map = (Map) o2;
					String map_key = map.get("condition") + "";
					allValue.append(map_key + "".trim());
					for (Object o3 : (List) map.get("values")) {
						allValue.append(o3 + "".trim());
					}
				}
			}
			if (cr.criteriaWithListValue.size() > 0) {
				for (Object o2 : cr.criteriaWithListValue) {
					Map map = (Map) o2;
					String map_key = map.get("condition") + "";
					allValue.append(map_key + "".trim());
					for (Object o3 : (List) map.get("values")) {
						allValue.append(o3 + "".trim());
					}
				}
			}
		}
		return allValue.toString();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table account_record
	 *
	 * @abatorgenerated Thu Aug 17 12:53:28 CST 2017
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;

		protected List criteriaWithSingleValue;

		protected List criteriaWithListValue;

		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andAccountIdIsNull() {
			addCriterion("account_id is null");
			return this;
		}

		public Criteria andAccountIdIsNotNull() {
			addCriterion("account_id is not null");
			return this;
		}

		public Criteria andAccountIdEqualTo(Long value) {
			addCriterion("account_id =", value, "accountId");
			return this;
		}

		public Criteria andAccountIdNotEqualTo(Long value) {
			addCriterion("account_id <>", value, "accountId");
			return this;
		}

		public Criteria andAccountIdGreaterThan(Long value) {
			addCriterion("account_id >", value, "accountId");
			return this;
		}

		public Criteria andAccountIdGreaterThanOrEqualTo(Long value) {
			addCriterion("account_id >=", value, "accountId");
			return this;
		}

		public Criteria andAccountIdLessThan(Long value) {
			addCriterion("account_id <", value, "accountId");
			return this;
		}

		public Criteria andAccountIdLessThanOrEqualTo(Long value) {
			addCriterion("account_id <=", value, "accountId");
			return this;
		}

		public Criteria andAccountIdIn(List values) {
			addCriterion("account_id in", values, "accountId");
			return this;
		}

		public Criteria andAccountIdNotIn(List values) {
			addCriterion("account_id not in", values, "accountId");
			return this;
		}

		public Criteria andAccountIdBetween(Long value1, Long value2) {
			addCriterion("account_id between", value1, value2, "accountId");
			return this;
		}

		public Criteria andAccountIdNotBetween(Long value1, Long value2) {
			addCriterion("account_id not between", value1, value2, "accountId");
			return this;
		}

		public Criteria andOptTypeIsNull() {
			addCriterion("opt_type is null");
			return this;
		}

		public Criteria andOptTypeIsNotNull() {
			addCriterion("opt_type is not null");
			return this;
		}

		public Criteria andOptTypeEqualTo(Integer value) {
			addCriterion("opt_type =", value, "optType");
			return this;
		}

		public Criteria andOptTypeNotEqualTo(Integer value) {
			addCriterion("opt_type <>", value, "optType");
			return this;
		}

		public Criteria andOptTypeGreaterThan(Integer value) {
			addCriterion("opt_type >", value, "optType");
			return this;
		}

		public Criteria andOptTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("opt_type >=", value, "optType");
			return this;
		}

		public Criteria andOptTypeLessThan(Integer value) {
			addCriterion("opt_type <", value, "optType");
			return this;
		}

		public Criteria andOptTypeLessThanOrEqualTo(Integer value) {
			addCriterion("opt_type <=", value, "optType");
			return this;
		}

		public Criteria andOptTypeIn(List values) {
			addCriterion("opt_type in", values, "optType");
			return this;
		}

		public Criteria andOptTypeNotIn(List values) {
			addCriterion("opt_type not in", values, "optType");
			return this;
		}

		public Criteria andOptTypeBetween(Integer value1, Integer value2) {
			addCriterion("opt_type between", value1, value2, "optType");
			return this;
		}

		public Criteria andOptTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("opt_type not between", value1, value2, "optType");
			return this;
		}

		public Criteria andOptAmountIsNull() {
			addCriterion("opt_amount is null");
			return this;
		}

		public Criteria andOptAmountIsNotNull() {
			addCriterion("opt_amount is not null");
			return this;
		}

		public Criteria andOptAmountEqualTo(BigDecimal value) {
			addCriterion("opt_amount =", value, "optAmount");
			return this;
		}

		public Criteria andOptAmountNotEqualTo(BigDecimal value) {
			addCriterion("opt_amount <>", value, "optAmount");
			return this;
		}

		public Criteria andOptAmountGreaterThan(BigDecimal value) {
			addCriterion("opt_amount >", value, "optAmount");
			return this;
		}

		public Criteria andOptAmountGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("opt_amount >=", value, "optAmount");
			return this;
		}

		public Criteria andOptAmountLessThan(BigDecimal value) {
			addCriterion("opt_amount <", value, "optAmount");
			return this;
		}

		public Criteria andOptAmountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("opt_amount <=", value, "optAmount");
			return this;
		}

		public Criteria andOptAmountIn(List values) {
			addCriterion("opt_amount in", values, "optAmount");
			return this;
		}

		public Criteria andOptAmountNotIn(List values) {
			addCriterion("opt_amount not in", values, "optAmount");
			return this;
		}

		public Criteria andOptAmountBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("opt_amount between", value1, value2, "optAmount");
			return this;
		}

		public Criteria andOptAmountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("opt_amount not between", value1, value2, "optAmount");
			return this;
		}

		public Criteria andRestAmountIsNull() {
			addCriterion("rest_amount is null");
			return this;
		}

		public Criteria andRestAmountIsNotNull() {
			addCriterion("rest_amount is not null");
			return this;
		}

		public Criteria andRestAmountEqualTo(BigDecimal value) {
			addCriterion("rest_amount =", value, "restAmount");
			return this;
		}

		public Criteria andRestAmountNotEqualTo(BigDecimal value) {
			addCriterion("rest_amount <>", value, "restAmount");
			return this;
		}

		public Criteria andRestAmountGreaterThan(BigDecimal value) {
			addCriterion("rest_amount >", value, "restAmount");
			return this;
		}

		public Criteria andRestAmountGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("rest_amount >=", value, "restAmount");
			return this;
		}

		public Criteria andRestAmountLessThan(BigDecimal value) {
			addCriterion("rest_amount <", value, "restAmount");
			return this;
		}

		public Criteria andRestAmountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("rest_amount <=", value, "restAmount");
			return this;
		}

		public Criteria andRestAmountIn(List values) {
			addCriterion("rest_amount in", values, "restAmount");
			return this;
		}

		public Criteria andRestAmountNotIn(List values) {
			addCriterion("rest_amount not in", values, "restAmount");
			return this;
		}

		public Criteria andRestAmountBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("rest_amount between", value1, value2, "restAmount");
			return this;
		}

		public Criteria andRestAmountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("rest_amount not between", value1, value2,
					"restAmount");
			return this;
		}

		public Criteria andOptCommontIsNull() {
			addCriterion("opt_commont is null");
			return this;
		}

		public Criteria andOptCommontIsNotNull() {
			addCriterion("opt_commont is not null");
			return this;
		}

		public Criteria andOptCommontEqualTo(String value) {
			addCriterion("opt_commont =", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontNotEqualTo(String value) {
			addCriterion("opt_commont <>", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontGreaterThan(String value) {
			addCriterion("opt_commont >", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontGreaterThanOrEqualTo(String value) {
			addCriterion("opt_commont >=", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontLessThan(String value) {
			addCriterion("opt_commont <", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontLessThanOrEqualTo(String value) {
			addCriterion("opt_commont <=", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontLike(String value) {
			addCriterion("opt_commont like", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontNotLike(String value) {
			addCriterion("opt_commont not like", value, "optCommont");
			return this;
		}

		public Criteria andOptCommontIn(List values) {
			addCriterion("opt_commont in", values, "optCommont");
			return this;
		}

		public Criteria andOptCommontNotIn(List values) {
			addCriterion("opt_commont not in", values, "optCommont");
			return this;
		}

		public Criteria andOptCommontBetween(String value1, String value2) {
			addCriterion("opt_commont between", value1, value2, "optCommont");
			return this;
		}

		public Criteria andOptCommontNotBetween(String value1, String value2) {
			addCriterion("opt_commont not between", value1, value2,
					"optCommont");
			return this;
		}

		public Criteria andIsAvailableIsNull() {
			addCriterion("is_available is null");
			return this;
		}

		public Criteria andIsAvailableIsNotNull() {
			addCriterion("is_available is not null");
			return this;
		}

		public Criteria andIsAvailableEqualTo(Integer value) {
			addCriterion("is_available =", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableNotEqualTo(Integer value) {
			addCriterion("is_available <>", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableGreaterThan(Integer value) {
			addCriterion("is_available >", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_available >=", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableLessThan(Integer value) {
			addCriterion("is_available <", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableLessThanOrEqualTo(Integer value) {
			addCriterion("is_available <=", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableIn(List values) {
			addCriterion("is_available in", values, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableNotIn(List values) {
			addCriterion("is_available not in", values, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableBetween(Integer value1, Integer value2) {
			addCriterion("is_available between", value1, value2, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableNotBetween(Integer value1, Integer value2) {
			addCriterion("is_available not between", value1, value2,
					"isAvailable");
			return this;
		}

		public Criteria andIsDeletedIsNull() {
			addCriterion("is_deleted is null");
			return this;
		}

		public Criteria andIsDeletedIsNotNull() {
			addCriterion("is_deleted is not null");
			return this;
		}

		public Criteria andIsDeletedEqualTo(Integer value) {
			addCriterion("is_deleted =", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotEqualTo(Integer value) {
			addCriterion("is_deleted <>", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedGreaterThan(Integer value) {
			addCriterion("is_deleted >", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_deleted >=", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedLessThan(Integer value) {
			addCriterion("is_deleted <", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("is_deleted <=", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedIn(List values) {
			addCriterion("is_deleted in", values, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotIn(List values) {
			addCriterion("is_deleted not in", values, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedBetween(Integer value1, Integer value2) {
			addCriterion("is_deleted between", value1, value2, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("is_deleted not between", value1, value2, "isDeleted");
			return this;
		}

		public Criteria andCreateUserIsNull() {
			addCriterion("create_user is null");
			return this;
		}

		public Criteria andCreateUserIsNotNull() {
			addCriterion("create_user is not null");
			return this;
		}

		public Criteria andCreateUserEqualTo(Long value) {
			addCriterion("create_user =", value, "createUser");
			return this;
		}

		public Criteria andCreateUserNotEqualTo(Long value) {
			addCriterion("create_user <>", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThan(Long value) {
			addCriterion("create_user >", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThanOrEqualTo(Long value) {
			addCriterion("create_user >=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThan(Long value) {
			addCriterion("create_user <", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThanOrEqualTo(Long value) {
			addCriterion("create_user <=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserIn(List values) {
			addCriterion("create_user in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserNotIn(List values) {
			addCriterion("create_user not in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserBetween(Long value1, Long value2) {
			addCriterion("create_user between", value1, value2, "createUser");
			return this;
		}

		public Criteria andCreateUserNotBetween(Long value1, Long value2) {
			addCriterion("create_user not between", value1, value2,
					"createUser");
			return this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeIn(List values) {
			addCriterion("create_time in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotIn(List values) {
			addCriterion("create_time not in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2,
					"createTime");
			return this;
		}

		public Criteria andUpdateUserIsNull() {
			addCriterion("update_user is null");
			return this;
		}

		public Criteria andUpdateUserIsNotNull() {
			addCriterion("update_user is not null");
			return this;
		}

		public Criteria andUpdateUserEqualTo(Long value) {
			addCriterion("update_user =", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserNotEqualTo(Long value) {
			addCriterion("update_user <>", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserGreaterThan(Long value) {
			addCriterion("update_user >", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserGreaterThanOrEqualTo(Long value) {
			addCriterion("update_user >=", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserLessThan(Long value) {
			addCriterion("update_user <", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserLessThanOrEqualTo(Long value) {
			addCriterion("update_user <=", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserIn(List values) {
			addCriterion("update_user in", values, "updateUser");
			return this;
		}

		public Criteria andUpdateUserNotIn(List values) {
			addCriterion("update_user not in", values, "updateUser");
			return this;
		}

		public Criteria andUpdateUserBetween(Long value1, Long value2) {
			addCriterion("update_user between", value1, value2, "updateUser");
			return this;
		}

		public Criteria andUpdateUserNotBetween(Long value1, Long value2) {
			addCriterion("update_user not between", value1, value2,
					"updateUser");
			return this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeIn(List values) {
			addCriterion("update_time in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotIn(List values) {
			addCriterion("update_time not in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2,
					"updateTime");
			return this;
		}
	}
}