package com.people2000.user.model.po.ibatis;

import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public class UUnionLoginPOExample {
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	protected Long limitClauseStart;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	protected Long limitClauseCount;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public UUnionLoginPOExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	protected UUnionLoginPOExample(UUnionLoginPOExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClauseStart = example.limitClauseStart;
		this.limitClauseCount = example.limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public void setLimitClauseStart(Long limitClauseStart) {
		this.limitClauseStart = limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public Long getLimitClauseStart() {
		return limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public void setLimitClauseCount(Long limitClauseCount) {
		this.limitClauseCount = limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public Long getLimitClauseCount() {
		return limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public String allValue2String() {
		StringBuffer allValue = new StringBuffer();
		for (Object o : oredCriteria) {
			Criteria cr = (Criteria) o;
			if (cr.criteriaWithoutValue.size() > 0) {
				for (Object o2 : cr.criteriaWithoutValue) {
					allValue.append(o2);
				}
			}
			if (cr.criteriaWithSingleValue.size() > 0) {
				for (Object o2 : cr.criteriaWithSingleValue) {
					allValue.append(o2);
				}
			}
			if (cr.criteriaWithBetweenValue.size() > 0) {
				for (Object o2 : cr.criteriaWithBetweenValue) {
					Map map = (Map) o2;
					String map_key = map.get("condition") + "";
					allValue.append(map_key + "".trim());
					for (Object o3 : (List) map.get("values")) {
						allValue.append(o3 + "".trim());
					}
				}
			}
			if (cr.criteriaWithListValue.size() > 0) {
				for (Object o2 : cr.criteriaWithListValue) {
					Map map = (Map) o2;
					String map_key = map.get("condition") + "";
					allValue.append(map_key + "".trim());
					for (Object o3 : (List) map.get("values")) {
						allValue.append(o3 + "".trim());
					}
				}
			}
		}
		return allValue.toString();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table u_union_login
	 *
	 * @abatorgenerated Thu Oct 13 20:49:35 CST 2016
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;

		protected List criteriaWithSingleValue;

		protected List criteriaWithListValue;

		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(Long value) {
			addCriterion("user_id =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(Long value) {
			addCriterion("user_id <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(Long value) {
			addCriterion("user_id >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("user_id >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(Long value) {
			addCriterion("user_id <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Long value) {
			addCriterion("user_id <=", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("user_id in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("user_id not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(Long value1, Long value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(Long value1, Long value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return this;
		}

		public Criteria andOauthAccessTokenIsNull() {
			addCriterion("oauth_access_token is null");
			return this;
		}

		public Criteria andOauthAccessTokenIsNotNull() {
			addCriterion("oauth_access_token is not null");
			return this;
		}

		public Criteria andOauthAccessTokenEqualTo(String value) {
			addCriterion("oauth_access_token =", value, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenNotEqualTo(String value) {
			addCriterion("oauth_access_token <>", value, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenGreaterThan(String value) {
			addCriterion("oauth_access_token >", value, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenGreaterThanOrEqualTo(String value) {
			addCriterion("oauth_access_token >=", value, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenLessThan(String value) {
			addCriterion("oauth_access_token <", value, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenLessThanOrEqualTo(String value) {
			addCriterion("oauth_access_token <=", value, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenLike(String value) {
			addCriterion("oauth_access_token like", value, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenNotLike(String value) {
			addCriterion("oauth_access_token not like", value,
					"oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenIn(List values) {
			addCriterion("oauth_access_token in", values, "oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenNotIn(List values) {
			addCriterion("oauth_access_token not in", values,
					"oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenBetween(String value1, String value2) {
			addCriterion("oauth_access_token between", value1, value2,
					"oauthAccessToken");
			return this;
		}

		public Criteria andOauthAccessTokenNotBetween(String value1,
				String value2) {
			addCriterion("oauth_access_token not between", value1, value2,
					"oauthAccessToken");
			return this;
		}

		public Criteria andOauthRefreshTokenIsNull() {
			addCriterion("oauth_refresh_token is null");
			return this;
		}

		public Criteria andOauthRefreshTokenIsNotNull() {
			addCriterion("oauth_refresh_token is not null");
			return this;
		}

		public Criteria andOauthRefreshTokenEqualTo(String value) {
			addCriterion("oauth_refresh_token =", value, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenNotEqualTo(String value) {
			addCriterion("oauth_refresh_token <>", value, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenGreaterThan(String value) {
			addCriterion("oauth_refresh_token >", value, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenGreaterThanOrEqualTo(String value) {
			addCriterion("oauth_refresh_token >=", value, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenLessThan(String value) {
			addCriterion("oauth_refresh_token <", value, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenLessThanOrEqualTo(String value) {
			addCriterion("oauth_refresh_token <=", value, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenLike(String value) {
			addCriterion("oauth_refresh_token like", value, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenNotLike(String value) {
			addCriterion("oauth_refresh_token not like", value,
					"oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenIn(List values) {
			addCriterion("oauth_refresh_token in", values, "oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenNotIn(List values) {
			addCriterion("oauth_refresh_token not in", values,
					"oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenBetween(String value1, String value2) {
			addCriterion("oauth_refresh_token between", value1, value2,
					"oauthRefreshToken");
			return this;
		}

		public Criteria andOauthRefreshTokenNotBetween(String value1,
				String value2) {
			addCriterion("oauth_refresh_token not between", value1, value2,
					"oauthRefreshToken");
			return this;
		}

		public Criteria andOauthOpenIdIsNull() {
			addCriterion("oauth_open_id is null");
			return this;
		}

		public Criteria andOauthOpenIdIsNotNull() {
			addCriterion("oauth_open_id is not null");
			return this;
		}

		public Criteria andOauthOpenIdEqualTo(String value) {
			addCriterion("oauth_open_id =", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdNotEqualTo(String value) {
			addCriterion("oauth_open_id <>", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdGreaterThan(String value) {
			addCriterion("oauth_open_id >", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdGreaterThanOrEqualTo(String value) {
			addCriterion("oauth_open_id >=", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdLessThan(String value) {
			addCriterion("oauth_open_id <", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdLessThanOrEqualTo(String value) {
			addCriterion("oauth_open_id <=", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdLike(String value) {
			addCriterion("oauth_open_id like", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdNotLike(String value) {
			addCriterion("oauth_open_id not like", value, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdIn(List values) {
			addCriterion("oauth_open_id in", values, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdNotIn(List values) {
			addCriterion("oauth_open_id not in", values, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdBetween(String value1, String value2) {
			addCriterion("oauth_open_id between", value1, value2, "oauthOpenId");
			return this;
		}

		public Criteria andOauthOpenIdNotBetween(String value1, String value2) {
			addCriterion("oauth_open_id not between", value1, value2,
					"oauthOpenId");
			return this;
		}

		public Criteria andOauthSourceSystemIsNull() {
			addCriterion("oauth_source_system is null");
			return this;
		}

		public Criteria andOauthSourceSystemIsNotNull() {
			addCriterion("oauth_source_system is not null");
			return this;
		}

		public Criteria andOauthSourceSystemEqualTo(Integer value) {
			addCriterion("oauth_source_system =", value, "oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemNotEqualTo(Integer value) {
			addCriterion("oauth_source_system <>", value, "oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemGreaterThan(Integer value) {
			addCriterion("oauth_source_system >", value, "oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemGreaterThanOrEqualTo(Integer value) {
			addCriterion("oauth_source_system >=", value, "oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemLessThan(Integer value) {
			addCriterion("oauth_source_system <", value, "oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemLessThanOrEqualTo(Integer value) {
			addCriterion("oauth_source_system <=", value, "oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemIn(List values) {
			addCriterion("oauth_source_system in", values, "oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemNotIn(List values) {
			addCriterion("oauth_source_system not in", values,
					"oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemBetween(Integer value1,
				Integer value2) {
			addCriterion("oauth_source_system between", value1, value2,
					"oauthSourceSystem");
			return this;
		}

		public Criteria andOauthSourceSystemNotBetween(Integer value1,
				Integer value2) {
			addCriterion("oauth_source_system not between", value1, value2,
					"oauthSourceSystem");
			return this;
		}

		public Criteria andOauthExpiresInIsNull() {
			addCriterion("oauth_expires_in is null");
			return this;
		}

		public Criteria andOauthExpiresInIsNotNull() {
			addCriterion("oauth_expires_in is not null");
			return this;
		}

		public Criteria andOauthExpiresInEqualTo(Long value) {
			addCriterion("oauth_expires_in =", value, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInNotEqualTo(Long value) {
			addCriterion("oauth_expires_in <>", value, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInGreaterThan(Long value) {
			addCriterion("oauth_expires_in >", value, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInGreaterThanOrEqualTo(Long value) {
			addCriterion("oauth_expires_in >=", value, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInLessThan(Long value) {
			addCriterion("oauth_expires_in <", value, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInLessThanOrEqualTo(Long value) {
			addCriterion("oauth_expires_in <=", value, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInIn(List values) {
			addCriterion("oauth_expires_in in", values, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInNotIn(List values) {
			addCriterion("oauth_expires_in not in", values, "oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInBetween(Long value1, Long value2) {
			addCriterion("oauth_expires_in between", value1, value2,
					"oauthExpiresIn");
			return this;
		}

		public Criteria andOauthExpiresInNotBetween(Long value1, Long value2) {
			addCriterion("oauth_expires_in not between", value1, value2,
					"oauthExpiresIn");
			return this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeIn(List values) {
			addCriterion("create_time in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotIn(List values) {
			addCriterion("create_time not in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2,
					"createTime");
			return this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeIn(List values) {
			addCriterion("update_time in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotIn(List values) {
			addCriterion("update_time not in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2,
					"updateTime");
			return this;
		}

		public Criteria andDeleteTimeIsNull() {
			addCriterion("delete_time is null");
			return this;
		}

		public Criteria andDeleteTimeIsNotNull() {
			addCriterion("delete_time is not null");
			return this;
		}

		public Criteria andDeleteTimeEqualTo(Date value) {
			addCriterion("delete_time =", value, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeNotEqualTo(Date value) {
			addCriterion("delete_time <>", value, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeGreaterThan(Date value) {
			addCriterion("delete_time >", value, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("delete_time >=", value, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeLessThan(Date value) {
			addCriterion("delete_time <", value, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeLessThanOrEqualTo(Date value) {
			addCriterion("delete_time <=", value, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeIn(List values) {
			addCriterion("delete_time in", values, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeNotIn(List values) {
			addCriterion("delete_time not in", values, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeBetween(Date value1, Date value2) {
			addCriterion("delete_time between", value1, value2, "deleteTime");
			return this;
		}

		public Criteria andDeleteTimeNotBetween(Date value1, Date value2) {
			addCriterion("delete_time not between", value1, value2,
					"deleteTime");
			return this;
		}

		public Criteria andCreateUserIdIsNull() {
			addCriterion("create_user_id is null");
			return this;
		}

		public Criteria andCreateUserIdIsNotNull() {
			addCriterion("create_user_id is not null");
			return this;
		}

		public Criteria andCreateUserIdEqualTo(Long value) {
			addCriterion("create_user_id =", value, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdNotEqualTo(Long value) {
			addCriterion("create_user_id <>", value, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdGreaterThan(Long value) {
			addCriterion("create_user_id >", value, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("create_user_id >=", value, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdLessThan(Long value) {
			addCriterion("create_user_id <", value, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdLessThanOrEqualTo(Long value) {
			addCriterion("create_user_id <=", value, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdIn(List values) {
			addCriterion("create_user_id in", values, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdNotIn(List values) {
			addCriterion("create_user_id not in", values, "createUserId");
			return this;
		}

		public Criteria andCreateUserIdBetween(Long value1, Long value2) {
			addCriterion("create_user_id between", value1, value2,
					"createUserId");
			return this;
		}

		public Criteria andCreateUserIdNotBetween(Long value1, Long value2) {
			addCriterion("create_user_id not between", value1, value2,
					"createUserId");
			return this;
		}

		public Criteria andUpdateUserIdIsNull() {
			addCriterion("update_user_id is null");
			return this;
		}

		public Criteria andUpdateUserIdIsNotNull() {
			addCriterion("update_user_id is not null");
			return this;
		}

		public Criteria andUpdateUserIdEqualTo(Long value) {
			addCriterion("update_user_id =", value, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdNotEqualTo(Long value) {
			addCriterion("update_user_id <>", value, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdGreaterThan(Long value) {
			addCriterion("update_user_id >", value, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("update_user_id >=", value, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdLessThan(Long value) {
			addCriterion("update_user_id <", value, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdLessThanOrEqualTo(Long value) {
			addCriterion("update_user_id <=", value, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdIn(List values) {
			addCriterion("update_user_id in", values, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdNotIn(List values) {
			addCriterion("update_user_id not in", values, "updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdBetween(Long value1, Long value2) {
			addCriterion("update_user_id between", value1, value2,
					"updateUserId");
			return this;
		}

		public Criteria andUpdateUserIdNotBetween(Long value1, Long value2) {
			addCriterion("update_user_id not between", value1, value2,
					"updateUserId");
			return this;
		}

		public Criteria andDeleteUserIdIsNull() {
			addCriterion("delete_user_id is null");
			return this;
		}

		public Criteria andDeleteUserIdIsNotNull() {
			addCriterion("delete_user_id is not null");
			return this;
		}

		public Criteria andDeleteUserIdEqualTo(Long value) {
			addCriterion("delete_user_id =", value, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdNotEqualTo(Long value) {
			addCriterion("delete_user_id <>", value, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdGreaterThan(Long value) {
			addCriterion("delete_user_id >", value, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("delete_user_id >=", value, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdLessThan(Long value) {
			addCriterion("delete_user_id <", value, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdLessThanOrEqualTo(Long value) {
			addCriterion("delete_user_id <=", value, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdIn(List values) {
			addCriterion("delete_user_id in", values, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdNotIn(List values) {
			addCriterion("delete_user_id not in", values, "deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdBetween(Long value1, Long value2) {
			addCriterion("delete_user_id between", value1, value2,
					"deleteUserId");
			return this;
		}

		public Criteria andDeleteUserIdNotBetween(Long value1, Long value2) {
			addCriterion("delete_user_id not between", value1, value2,
					"deleteUserId");
			return this;
		}

		public Criteria andIsDeletedIsNull() {
			addCriterion("is_deleted is null");
			return this;
		}

		public Criteria andIsDeletedIsNotNull() {
			addCriterion("is_deleted is not null");
			return this;
		}

		public Criteria andIsDeletedEqualTo(Integer value) {
			addCriterion("is_deleted =", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotEqualTo(Integer value) {
			addCriterion("is_deleted <>", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedGreaterThan(Integer value) {
			addCriterion("is_deleted >", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_deleted >=", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedLessThan(Integer value) {
			addCriterion("is_deleted <", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("is_deleted <=", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedIn(List values) {
			addCriterion("is_deleted in", values, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotIn(List values) {
			addCriterion("is_deleted not in", values, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedBetween(Integer value1, Integer value2) {
			addCriterion("is_deleted between", value1, value2, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("is_deleted not between", value1, value2, "isDeleted");
			return this;
		}

		public Criteria andChecktimeIsNull() {
			addCriterion("checktime is null");
			return this;
		}

		public Criteria andChecktimeIsNotNull() {
			addCriterion("checktime is not null");
			return this;
		}

		public Criteria andChecktimeEqualTo(Date value) {
			addCriterion("checktime =", value, "checktime");
			return this;
		}

		public Criteria andChecktimeNotEqualTo(Date value) {
			addCriterion("checktime <>", value, "checktime");
			return this;
		}

		public Criteria andChecktimeGreaterThan(Date value) {
			addCriterion("checktime >", value, "checktime");
			return this;
		}

		public Criteria andChecktimeGreaterThanOrEqualTo(Date value) {
			addCriterion("checktime >=", value, "checktime");
			return this;
		}

		public Criteria andChecktimeLessThan(Date value) {
			addCriterion("checktime <", value, "checktime");
			return this;
		}

		public Criteria andChecktimeLessThanOrEqualTo(Date value) {
			addCriterion("checktime <=", value, "checktime");
			return this;
		}

		public Criteria andChecktimeIn(List values) {
			addCriterion("checktime in", values, "checktime");
			return this;
		}

		public Criteria andChecktimeNotIn(List values) {
			addCriterion("checktime not in", values, "checktime");
			return this;
		}

		public Criteria andChecktimeBetween(Date value1, Date value2) {
			addCriterion("checktime between", value1, value2, "checktime");
			return this;
		}

		public Criteria andChecktimeNotBetween(Date value1, Date value2) {
			addCriterion("checktime not between", value1, value2, "checktime");
			return this;
		}

		public Criteria andOauthUnionIdIsNull() {
			addCriterion("oauth_union_id is null");
			return this;
		}

		public Criteria andOauthUnionIdIsNotNull() {
			addCriterion("oauth_union_id is not null");
			return this;
		}

		public Criteria andOauthUnionIdEqualTo(String value) {
			addCriterion("oauth_union_id =", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdNotEqualTo(String value) {
			addCriterion("oauth_union_id <>", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdGreaterThan(String value) {
			addCriterion("oauth_union_id >", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdGreaterThanOrEqualTo(String value) {
			addCriterion("oauth_union_id >=", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdLessThan(String value) {
			addCriterion("oauth_union_id <", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdLessThanOrEqualTo(String value) {
			addCriterion("oauth_union_id <=", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdLike(String value) {
			addCriterion("oauth_union_id like", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdNotLike(String value) {
			addCriterion("oauth_union_id not like", value, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdIn(List values) {
			addCriterion("oauth_union_id in", values, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdNotIn(List values) {
			addCriterion("oauth_union_id not in", values, "oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdBetween(String value1, String value2) {
			addCriterion("oauth_union_id between", value1, value2,
					"oauthUnionId");
			return this;
		}

		public Criteria andOauthUnionIdNotBetween(String value1, String value2) {
			addCriterion("oauth_union_id not between", value1, value2,
					"oauthUnionId");
			return this;
		}
	}
}