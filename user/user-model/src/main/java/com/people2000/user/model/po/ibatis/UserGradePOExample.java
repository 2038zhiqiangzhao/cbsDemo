package com.people2000.user.model.po.ibatis;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public class UserGradePOExample {
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	protected Long limitClauseStart;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	protected Long limitClauseCount;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public UserGradePOExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	protected UserGradePOExample(UserGradePOExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.limitClauseStart = example.limitClauseStart;
		this.limitClauseCount = example.limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public void setLimitClauseStart(Long limitClauseStart) {
		this.limitClauseStart = limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public Long getLimitClauseStart() {
		return limitClauseStart;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public void setLimitClauseCount(Long limitClauseCount) {
		this.limitClauseCount = limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public Long getLimitClauseCount() {
		return limitClauseCount;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public String allValue2String() {
		StringBuffer allValue = new StringBuffer();
		for (Object o : oredCriteria) {
			Criteria cr = (Criteria) o;
			if (cr.criteriaWithoutValue.size() > 0) {
				for (Object o2 : cr.criteriaWithoutValue) {
					allValue.append(o2);
				}
			}
			if (cr.criteriaWithSingleValue.size() > 0) {
				for (Object o2 : cr.criteriaWithSingleValue) {
					allValue.append(o2);
				}
			}
			if (cr.criteriaWithBetweenValue.size() > 0) {
				for (Object o2 : cr.criteriaWithBetweenValue) {
					Map map = (Map) o2;
					String map_key = map.get("condition") + "";
					allValue.append(map_key + "".trim());
					for (Object o3 : (List) map.get("values")) {
						allValue.append(o3 + "".trim());
					}
				}
			}
			if (cr.criteriaWithListValue.size() > 0) {
				for (Object o2 : cr.criteriaWithListValue) {
					Map map = (Map) o2;
					String map_key = map.get("condition") + "";
					allValue.append(map_key + "".trim());
					for (Object o3 : (List) map.get("values")) {
						allValue.append(o3 + "".trim());
					}
				}
			}
		}
		return allValue.toString();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table user_grade
	 *
	 * @abatorgenerated Fri Sep 15 10:19:46 CST 2017
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;

		protected List criteriaWithSingleValue;

		protected List criteriaWithListValue;

		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new LinkedHashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andGradeNameIsNull() {
			addCriterion("grade_name is null");
			return this;
		}

		public Criteria andGradeNameIsNotNull() {
			addCriterion("grade_name is not null");
			return this;
		}

		public Criteria andGradeNameEqualTo(String value) {
			addCriterion("grade_name =", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameNotEqualTo(String value) {
			addCriterion("grade_name <>", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameGreaterThan(String value) {
			addCriterion("grade_name >", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameGreaterThanOrEqualTo(String value) {
			addCriterion("grade_name >=", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameLessThan(String value) {
			addCriterion("grade_name <", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameLessThanOrEqualTo(String value) {
			addCriterion("grade_name <=", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameLike(String value) {
			addCriterion("grade_name like", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameNotLike(String value) {
			addCriterion("grade_name not like", value, "gradeName");
			return this;
		}

		public Criteria andGradeNameIn(List values) {
			addCriterion("grade_name in", values, "gradeName");
			return this;
		}

		public Criteria andGradeNameNotIn(List values) {
			addCriterion("grade_name not in", values, "gradeName");
			return this;
		}

		public Criteria andGradeNameBetween(String value1, String value2) {
			addCriterion("grade_name between", value1, value2, "gradeName");
			return this;
		}

		public Criteria andGradeNameNotBetween(String value1, String value2) {
			addCriterion("grade_name not between", value1, value2, "gradeName");
			return this;
		}

		public Criteria andGradeTypeIsNull() {
			addCriterion("grade_type is null");
			return this;
		}

		public Criteria andGradeTypeIsNotNull() {
			addCriterion("grade_type is not null");
			return this;
		}

		public Criteria andGradeTypeEqualTo(Integer value) {
			addCriterion("grade_type =", value, "gradeType");
			return this;
		}

		public Criteria andGradeTypeNotEqualTo(Integer value) {
			addCriterion("grade_type <>", value, "gradeType");
			return this;
		}

		public Criteria andGradeTypeGreaterThan(Integer value) {
			addCriterion("grade_type >", value, "gradeType");
			return this;
		}

		public Criteria andGradeTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("grade_type >=", value, "gradeType");
			return this;
		}

		public Criteria andGradeTypeLessThan(Integer value) {
			addCriterion("grade_type <", value, "gradeType");
			return this;
		}

		public Criteria andGradeTypeLessThanOrEqualTo(Integer value) {
			addCriterion("grade_type <=", value, "gradeType");
			return this;
		}

		public Criteria andGradeTypeIn(List values) {
			addCriterion("grade_type in", values, "gradeType");
			return this;
		}

		public Criteria andGradeTypeNotIn(List values) {
			addCriterion("grade_type not in", values, "gradeType");
			return this;
		}

		public Criteria andGradeTypeBetween(Integer value1, Integer value2) {
			addCriterion("grade_type between", value1, value2, "gradeType");
			return this;
		}

		public Criteria andGradeTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("grade_type not between", value1, value2, "gradeType");
			return this;
		}

		public Criteria andGroupTypeIsNull() {
			addCriterion("group_type is null");
			return this;
		}

		public Criteria andGroupTypeIsNotNull() {
			addCriterion("group_type is not null");
			return this;
		}

		public Criteria andGroupTypeEqualTo(Integer value) {
			addCriterion("group_type =", value, "groupType");
			return this;
		}

		public Criteria andGroupTypeNotEqualTo(Integer value) {
			addCriterion("group_type <>", value, "groupType");
			return this;
		}

		public Criteria andGroupTypeGreaterThan(Integer value) {
			addCriterion("group_type >", value, "groupType");
			return this;
		}

		public Criteria andGroupTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("group_type >=", value, "groupType");
			return this;
		}

		public Criteria andGroupTypeLessThan(Integer value) {
			addCriterion("group_type <", value, "groupType");
			return this;
		}

		public Criteria andGroupTypeLessThanOrEqualTo(Integer value) {
			addCriterion("group_type <=", value, "groupType");
			return this;
		}

		public Criteria andGroupTypeIn(List values) {
			addCriterion("group_type in", values, "groupType");
			return this;
		}

		public Criteria andGroupTypeNotIn(List values) {
			addCriterion("group_type not in", values, "groupType");
			return this;
		}

		public Criteria andGroupTypeBetween(Integer value1, Integer value2) {
			addCriterion("group_type between", value1, value2, "groupType");
			return this;
		}

		public Criteria andGroupTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("group_type not between", value1, value2, "groupType");
			return this;
		}

		public Criteria andIconUrlIsNull() {
			addCriterion("icon_url is null");
			return this;
		}

		public Criteria andIconUrlIsNotNull() {
			addCriterion("icon_url is not null");
			return this;
		}

		public Criteria andIconUrlEqualTo(String value) {
			addCriterion("icon_url =", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlNotEqualTo(String value) {
			addCriterion("icon_url <>", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlGreaterThan(String value) {
			addCriterion("icon_url >", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlGreaterThanOrEqualTo(String value) {
			addCriterion("icon_url >=", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlLessThan(String value) {
			addCriterion("icon_url <", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlLessThanOrEqualTo(String value) {
			addCriterion("icon_url <=", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlLike(String value) {
			addCriterion("icon_url like", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlNotLike(String value) {
			addCriterion("icon_url not like", value, "iconUrl");
			return this;
		}

		public Criteria andIconUrlIn(List values) {
			addCriterion("icon_url in", values, "iconUrl");
			return this;
		}

		public Criteria andIconUrlNotIn(List values) {
			addCriterion("icon_url not in", values, "iconUrl");
			return this;
		}

		public Criteria andIconUrlBetween(String value1, String value2) {
			addCriterion("icon_url between", value1, value2, "iconUrl");
			return this;
		}

		public Criteria andIconUrlNotBetween(String value1, String value2) {
			addCriterion("icon_url not between", value1, value2, "iconUrl");
			return this;
		}

		public Criteria andPriceIsNull() {
			addCriterion("price is null");
			return this;
		}

		public Criteria andPriceIsNotNull() {
			addCriterion("price is not null");
			return this;
		}

		public Criteria andPriceEqualTo(BigDecimal value) {
			addCriterion("price =", value, "price");
			return this;
		}

		public Criteria andPriceNotEqualTo(BigDecimal value) {
			addCriterion("price <>", value, "price");
			return this;
		}

		public Criteria andPriceGreaterThan(BigDecimal value) {
			addCriterion("price >", value, "price");
			return this;
		}

		public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("price >=", value, "price");
			return this;
		}

		public Criteria andPriceLessThan(BigDecimal value) {
			addCriterion("price <", value, "price");
			return this;
		}

		public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
			addCriterion("price <=", value, "price");
			return this;
		}

		public Criteria andPriceIn(List values) {
			addCriterion("price in", values, "price");
			return this;
		}

		public Criteria andPriceNotIn(List values) {
			addCriterion("price not in", values, "price");
			return this;
		}

		public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("price between", value1, value2, "price");
			return this;
		}

		public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("price not between", value1, value2, "price");
			return this;
		}

		public Criteria andDiscountIsNull() {
			addCriterion("discount is null");
			return this;
		}

		public Criteria andDiscountIsNotNull() {
			addCriterion("discount is not null");
			return this;
		}

		public Criteria andDiscountEqualTo(BigDecimal value) {
			addCriterion("discount =", value, "discount");
			return this;
		}

		public Criteria andDiscountNotEqualTo(BigDecimal value) {
			addCriterion("discount <>", value, "discount");
			return this;
		}

		public Criteria andDiscountGreaterThan(BigDecimal value) {
			addCriterion("discount >", value, "discount");
			return this;
		}

		public Criteria andDiscountGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("discount >=", value, "discount");
			return this;
		}

		public Criteria andDiscountLessThan(BigDecimal value) {
			addCriterion("discount <", value, "discount");
			return this;
		}

		public Criteria andDiscountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("discount <=", value, "discount");
			return this;
		}

		public Criteria andDiscountIn(List values) {
			addCriterion("discount in", values, "discount");
			return this;
		}

		public Criteria andDiscountNotIn(List values) {
			addCriterion("discount not in", values, "discount");
			return this;
		}

		public Criteria andDiscountBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("discount between", value1, value2, "discount");
			return this;
		}

		public Criteria andDiscountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("discount not between", value1, value2, "discount");
			return this;
		}

		public Criteria andIsAvailableIsNull() {
			addCriterion("is_available is null");
			return this;
		}

		public Criteria andIsAvailableIsNotNull() {
			addCriterion("is_available is not null");
			return this;
		}

		public Criteria andIsAvailableEqualTo(Integer value) {
			addCriterion("is_available =", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableNotEqualTo(Integer value) {
			addCriterion("is_available <>", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableGreaterThan(Integer value) {
			addCriterion("is_available >", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_available >=", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableLessThan(Integer value) {
			addCriterion("is_available <", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableLessThanOrEqualTo(Integer value) {
			addCriterion("is_available <=", value, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableIn(List values) {
			addCriterion("is_available in", values, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableNotIn(List values) {
			addCriterion("is_available not in", values, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableBetween(Integer value1, Integer value2) {
			addCriterion("is_available between", value1, value2, "isAvailable");
			return this;
		}

		public Criteria andIsAvailableNotBetween(Integer value1, Integer value2) {
			addCriterion("is_available not between", value1, value2,
					"isAvailable");
			return this;
		}

		public Criteria andIsDeletedIsNull() {
			addCriterion("is_deleted is null");
			return this;
		}

		public Criteria andIsDeletedIsNotNull() {
			addCriterion("is_deleted is not null");
			return this;
		}

		public Criteria andIsDeletedEqualTo(Integer value) {
			addCriterion("is_deleted =", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotEqualTo(Integer value) {
			addCriterion("is_deleted <>", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedGreaterThan(Integer value) {
			addCriterion("is_deleted >", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_deleted >=", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedLessThan(Integer value) {
			addCriterion("is_deleted <", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("is_deleted <=", value, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedIn(List values) {
			addCriterion("is_deleted in", values, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotIn(List values) {
			addCriterion("is_deleted not in", values, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedBetween(Integer value1, Integer value2) {
			addCriterion("is_deleted between", value1, value2, "isDeleted");
			return this;
		}

		public Criteria andIsDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("is_deleted not between", value1, value2, "isDeleted");
			return this;
		}

		public Criteria andCreateUserIsNull() {
			addCriterion("create_user is null");
			return this;
		}

		public Criteria andCreateUserIsNotNull() {
			addCriterion("create_user is not null");
			return this;
		}

		public Criteria andCreateUserEqualTo(Long value) {
			addCriterion("create_user =", value, "createUser");
			return this;
		}

		public Criteria andCreateUserNotEqualTo(Long value) {
			addCriterion("create_user <>", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThan(Long value) {
			addCriterion("create_user >", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThanOrEqualTo(Long value) {
			addCriterion("create_user >=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThan(Long value) {
			addCriterion("create_user <", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThanOrEqualTo(Long value) {
			addCriterion("create_user <=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserIn(List values) {
			addCriterion("create_user in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserNotIn(List values) {
			addCriterion("create_user not in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserBetween(Long value1, Long value2) {
			addCriterion("create_user between", value1, value2, "createUser");
			return this;
		}

		public Criteria andCreateUserNotBetween(Long value1, Long value2) {
			addCriterion("create_user not between", value1, value2,
					"createUser");
			return this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeIn(List values) {
			addCriterion("create_time in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotIn(List values) {
			addCriterion("create_time not in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2,
					"createTime");
			return this;
		}

		public Criteria andUpdateUserIsNull() {
			addCriterion("update_user is null");
			return this;
		}

		public Criteria andUpdateUserIsNotNull() {
			addCriterion("update_user is not null");
			return this;
		}

		public Criteria andUpdateUserEqualTo(Long value) {
			addCriterion("update_user =", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserNotEqualTo(Long value) {
			addCriterion("update_user <>", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserGreaterThan(Long value) {
			addCriterion("update_user >", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserGreaterThanOrEqualTo(Long value) {
			addCriterion("update_user >=", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserLessThan(Long value) {
			addCriterion("update_user <", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserLessThanOrEqualTo(Long value) {
			addCriterion("update_user <=", value, "updateUser");
			return this;
		}

		public Criteria andUpdateUserIn(List values) {
			addCriterion("update_user in", values, "updateUser");
			return this;
		}

		public Criteria andUpdateUserNotIn(List values) {
			addCriterion("update_user not in", values, "updateUser");
			return this;
		}

		public Criteria andUpdateUserBetween(Long value1, Long value2) {
			addCriterion("update_user between", value1, value2, "updateUser");
			return this;
		}

		public Criteria andUpdateUserNotBetween(Long value1, Long value2) {
			addCriterion("update_user not between", value1, value2,
					"updateUser");
			return this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeIn(List values) {
			addCriterion("update_time in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotIn(List values) {
			addCriterion("update_time not in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2,
					"updateTime");
			return this;
		}
	}
}